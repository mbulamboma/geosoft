###
###'           ejabberd configuration file
###
### The parameters used in this configuration file are explained at
###
###       https://docs.ejabberd.im/admin/configuration
###
### The configuration file is written in YAML.
### *******************************************************
### *******           !!! WARNING !!!               *******
### *******     YAML IS INDENTATION SENSITIVE       *******
### ******* MAKE SURE YOU INDENT SECTIONS CORRECTLY *******
### *******************************************************
### Refer to http://en.wikipedia.org/wiki/YAML for the brief description.
###

hosts:
  - "<%= $hostname %>"

loglevel: 4
log_rotate_size: 10485760
log_rotate_count: 1
default_db: sql


certfiles:
  - "/opt/ejabberd/conf/server.pem"
#  - "/etc/letsencrypt/live/<%= $hostname %>/fullchain.pem"
#  - "/etc/letsencrypt/live/<%= $hostname %>/privkey.pem"

ca_file: "/opt/ejabberd/conf/cacert.pem"

listen:
  -
    port: 5222
    ip: "::"
    module: ejabberd_c2s
    max_stanza_size: 262144
    shaper: c2s_shaper
    access: c2s
    starttls_required: <%= $use_tls %>
    starttls: true
    protocol_options:
      - "no_sslv2"
      - "no_sslv3"
      - "no_tlsv1"
  -
    port: 5269
    ip: "::"
    module: ejabberd_s2s_in
    max_stanza_size: 524288
  -
    port: 5443
    ip: "::"
    module: ejabberd_http
    tls: true
    request_handlers:
      "/admin": ejabberd_web_admin
      "/api": mod_http_api
      "/bosh": mod_bosh
      "/captcha": ejabberd_captcha
      "/upload": mod_http_upload
      "/ws": ejabberd_http_ws
      "/oauth": ejabberd_oauth
  -
    port: 5280
    ip: "::"
    module: ejabberd_http
    request_handlers:
      "/admin": ejabberd_web_admin
 ##     "/.well-known/acme-challenge": ejabberd_acme
  -
    port: 1883
    ip: "::"
    module: mod_mqtt
    backlog: 1000
    ## listen for STUN/TURN traffic
    ## We need to add new listeners in the listen section
    ## at the top of that configuration file
  -
    port: 3478
    transport: udp
    module: ejabberd_stun
    use_turn: true
    ##turn_min_port: 49152
    ##turn_max_port: 65535
    ## The server's public IPv4 address:
    ##ip: <%= $ip %>
    turn_ipv4_address: <%= $ip %>
  -
    port: 5349
    transport: tcp
    module: ejabberd_stun
    use_turn: true
    tls: true
    ##turn_min_port: 49152
    ##turn_max_port: 65535
    turn_ipv4_address: <%= $ip %>

s2s_use_starttls: optional

acl:
  local:
    user_regexp: ""
  loopback:
    ip:
      - 127.0.0.0/8
      - ::1/128
      - ::FFFF:127.0.0.1/128
  admin:
    user:
      - "<%= $adminJID %>@<%= $hostname %>"

access_rules:
  local:
    allow: local
  c2s:
    deny: blocked
    allow: all
  announce:
    allow: admin
  configure:
    allow: admin
  muc_create:
    allow: local
  pubsub_createnode:
    allow: local
  trusted_network:
    allow: loopback
  protect_old_users:
  - allow: admin
  - deny: all

api_permissions:
  "console commands":
    from:
      - ejabberd_ctl
    who: all
    what: "*"
  "admin access":
    who:
      access:
        allow:
          acl: loopback
          acl: admin
      oauth:
        scope: "ejabberd:admin"
        access:
          allow:
            acl: loopback
            acl: admin
    what:
      - "*"
      - "!stop"
      - "!start"
  "public commands":
    who: all

    what:
      #- status
      - register
      - change_password
      - get_user_rooms
      - check_account
      - check_password
      - change_room_option
      #- send_message
      #- connected_users_number
      - create_room_with_opts
      - set_room_affiliation
      - subscribe_room
      - unsubscribe_room
      #- send_direct_invitatio
      - get_user_subscriptions
      - get_room_affiliations
      - get_room_affiliation
      - get_room_options
      - get_last
      - get_user_subscriptions
      - add_rosteritem

shaper:
  normal:
    rate: 1000
    burst_size: 20000
  fast: 50000

shaper_rules:
  max_user_sessions:
    - 5: admin
    - 1
  max_user_offline_messages:
    50: admin
    10000: all
  c2s_shaper:
    none: admin
    normal: all
  s2s_shaper: fast

max_fsm_queue: 10000

acme:
   contact: "mailto:tshyster@gmail.com"
   ca_url: "https://acme-v02.api.letsencrypt.org/directory"
   auto: false

modules:
  mod_adhoc: {}
  mod_admin_extra: {}
  mod_announce:
    access: announce
  mod_avatar: {}
  mod_blocking: {}
  mod_bosh: {}
  mod_caps: {}
  mod_carboncopy: {}
  mod_client_state: {}
  mod_configure: {}
  mod_disco: {}
  ##mod_fail2ban: {}
  mod_http_api: {}
  mod_http_upload:
    put_url: https://@HOST@:5443/upload
  mod_last: {}
  mod_mam:
    ## Mnesia is limited to 2GB, better to use an SQL backend
    ## For small servers SQLite is a good fit and is very easy
    ## to configure. Uncomment this when you have SQL configured:
    ## db_type: sql
    assume_mam_usage: true
    default: never
  mod_mqtt: {}
  mod_muc:
    access:
      - allow
    access_admin:
      - allow: admin
    access_create: muc_create
    access_persistent: muc_create
    access_mam:
      - allow
    default_room_options:
      allow_subscription: true  # enable MucSub
      mam: true
  mod_muc_admin: {}
  mod_multicast: {}
  mod_offline:
    access_max_user_messages: max_user_offline_messages
  mod_ping:
    send_pings: true
    ping_interval: 5
    ping_ack_timeout: 10
    timeout_action: kill
  mod_privacy: {}
  mod_private: {}
  mod_proxy65:
    access: local
    max_connections: 5
  mod_pubsub:
    access_createnode: pubsub_createnode
    plugins:
      - flat
      - pep
    force_node_config:
      ## Avoid buggy clients to make their bookmarks public
      storage:bookmarks:
        access_model: whitelist
  mod_push: {}
  mod_push_keepalive: {}
  mod_register:
    ## Only accept registration requests from the "trusted"
    ## network (see access_rules section above).
    ## Think twice before enabling registration from any
    ## address. See the Jabber SPAM Manifesto for details:
    ## https://github.com/ge0rg/jabber-spam-fighting-manifesto
    ip_access: trusted_network
  mod_roster:
    versioning: true
  mod_s2s_dialback: {}
  mod_shared_roster: {}
  mod_stream_mgmt:
    resume_timeout: 0
    resend_on_timeout: true
  mod_vcard: {}
  mod_vcard_xupdate: {}
  mod_version:
    show_os: false
  mod_metrics:
    ip: <%= $ip %>
    port: 11111
## Configuration file to enable STUN/TURN discovery using mod_stun_disco
## Configuring STUN/TURN for ejabberd video & voice calling
  mod_stun_disco:
    credentials_lifetime: 12h
    services:
        -
          host: <%= $ip %>
          port: 3478
          type: stun
          transport: udp
          restricted: false
        -
          host: <%= $ip %>
          port: 3478
          type: turn
          transport: udp
          restricted: true
        -
          host: <%= $hostname %>
          port: 5349
          type: stuns
          transport: tcp
          restricted: false
        -
          host: <%= $hostname %>
          port: 5349
          type: turns
          transport: tcp
          restricted: true
############## DATABASE CONFIGS ###########################
sql_type: mysql
sql_server: "localhost"
sql_database: "<%= $sql_database %>"
sql_username: "<%= $sql_username %>"
sql_password: "<%= $sql_password %>"
sql_port: 3306
auth_method: sql
### Local Variables:
### mode: yaml
### End:
### vim: set filetype=yamasolo@Etidlab#ml tabstop=8
